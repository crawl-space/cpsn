#!/usr/bin/ruby

require 'rubygems'
require 'mechanize'
require 'json'
require 'yaml'

$login_url = "https://store.playstation.com/external/index.vm?returnURL=https%3a%2f%2fsecureus.playstation.com%2fRegistration%2fPSNL%2fSignInFrame.aspx"
$friend_url = "http://profiles.us.playstation.com/playstation/psn/profile/friends"
$json_url = "http://profiles.us.playstation.com/playstation/psn/profile/get_gamer_summary_data?id="

def load_settings()
    settings = YAML::parse_file(File.expand_path("~/.cpsn/settings.yml"))
    return settings
end

def get_cookie(agent, username, password)
    page = agent.get($login_url)
    login_form = page.forms.first
    login_form.loginName = username
    login_form.password = password
    page = agent.submit(login_form)
    link = page.links.first

    if link.text == "Sign In"
        puts "Error logging in. Did you give the right username and password?"
        exit
    end

    page = link.click
  
    agent.cookie_jar.save_as File.expand_path("~/.cpsn/cookies.yml")
end

def get_agent(username, password)
    agent = WWW::Mechanize.new
    agent.user_agent_alias = 'Mac FireFox'
    agent.redirect_ok = true

    if File.exist? File.expand_path("~/.cpsn/cookies.yml")
        agent.cookie_jar.load File.expand_path("~/.cpsn/cookies.yml")
        return agent
    end

    get_cookie(agent, username, password)
    return agent
end

def get_friends(agent)
    page = agent.get($friend_url)
    divs = page.search("div.slotcontent")

    friends = []
    for div in divs
        friends << div.attributes["id"]
    end

    return friends
end 

def get_friend_status(agent, friend)
    page = agent.get($json_url + friend)
    data = JSON.parse(page.body)

    friend = {:name => data["userName"]}

    if data["onlineStatus"] == nil
        return nil
    end

    if data["onlineStatus"]["extensionStatus"] != nil
       friend[:status] = 'online'
       friend[:playing] = data["onlineStatus"]["extensionStatus"]["title"]
    else
       friend[:status] = 'offline'
       friend[:playing] = ""
    end

    return friend
end

settings = load_settings()
agent = get_agent(settings[:username].value, settings[:password].value)

if ARGV.length >= 1
    friend_names = ARGV[0..-1]
else
    begin
        friend_names = get_friends(agent)
    rescue WWW::Mechanize::ResponseCodeError
        get_cookie(agent, settings[:username].value, settings[:password].value)
        retry
    end
end

for friend_name in friend_names
    begin
        friend = get_friend_status(agent, friend_name)
    rescue WWW::Mechanize::ResponseCodeError
        get_cookie(agent, settings[:username].value, settings[:password].value)
        retry
    end

    if friend
        if friend[:status] != "offline"
            puts friend[:status] + "\t" + friend[:name] + "\t" + friend[:playing]
        end
    else
        puts "Error: no access to " + friend_name
    end
end
